/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;
import Connection.ConnectionFactory;
import classes.Aluno;
import classes.Avaliacao;
import classes.Disciplina;
import classes.Professor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.dao.AdmDAO;
import model.dao.AvaliacaoDAO;
import model.dao.DisciplinaDAO;
import model.dao.ProfessorDAO;
import verificacao.Horario;
import verificacao.VerificaCodigo;
import verificacao.VerificaEmail;
import verificacao.VerificaNome;
/**
 *
 * @author pedro
 */

public class TelaAdministrador extends javax.swing.JFrame {
    Professor professorTela;
    Disciplina disciplinaTela;
    ProfessorDAO procuraProfessor = new ProfessorDAO();
    AdmDAO adm = new AdmDAO();
    boolean novoProfessor= false;
    boolean editarProfessor = false;
    /**
     * Creates new form TelaAdministrador
     */
    public TelaAdministrador() {
        initComponents();
        txtNomeProfessor.setEnabled(false);
        txtEmail.setEnabled(false);
        txtDepartamentoProfessor.setEnabled(false);
        txtDisciplinaHorario.setEnabled(false);
        btnCancelarProfessor.setEnabled(false);
        btnEditarHorarioProfessor.setEnabled(false);
        btnExcluirProfessor.setEnabled(false);
        btnNovoProfessor.setEnabled(true);
        btnOkEditarHorario.setEnabled(false);
        btnOkProfessor.setEnabled(false);
        btnPesquisarProfessor.setEnabled(true);
        btnSalvar.setEnabled(false);
        btnExcluirDisciplinaProfessor.setEnabled(false);
        listaDisciplinasHorarios.setEnabled(false);
        txtEditarHorario.setEnabled(false);
        btnEditarProfessor.setEnabled(false);
    }
    
    public void limparProfessor (){
        professorTela = null;
        txtNomeProfessor.setText("");
        txtEmail.setText("");
        txtDepartamentoProfessor.setText("");
        DefaultListModel modelo = new DefaultListModel();
        listaDisciplinasHorarios.setModel(modelo);
        listaDisciplinasHorarios.setEnabled(false);
        modelo.removeAllElements();
        txtDisciplinaHorario.setText("");
        txtNomeProfessor.setEnabled(false);
        txtEmail.setEnabled(false);
        txtDepartamentoProfessor.setEnabled(false); 
        txtDisciplinaHorario.setEnabled(false);
        btnCancelarProfessor.setEnabled(false);
        btnEditarHorarioProfessor.setEnabled(false);
        btnExcluirProfessor.setEnabled(false);
        btnNovoProfessor.setEnabled(true);
        btnOkEditarHorario.setEnabled(false);
        btnOkProfessor.setEnabled(false);
        btnPesquisarProfessor.setEnabled(true);
        btnSalvar.setEnabled(false);
        btnExcluirDisciplinaProfessor.setEnabled(false);
        listaDisciplinasHorarios.setEnabled(false);
        txtEditarHorario.setEnabled(false);
        btnEditarProfessor.setEnabled(false);
    }
    
    public void limparDisciplina(){
        
    }
    
    public void carregarListaDisciplinas () {
        DefaultListModel data = new DefaultListModel();
        for (Disciplina disciplina : professorTela.getDisciplinas()){
            data.addElement(disciplina.getCodigo()+ ":"+professorTela.getHorario(disciplina));
        }
        listaDisciplinasHorarios.setModel(data);
    }
    
    public void carregarListaProfessores (){
        DefaultListModel modelo = new DefaultListModel();
    }
    
    public void carregarInformacoesProfessor(){
        procuraProfessor.criaListaDisciplinas(professorTela);
        for (Disciplina disciplina : professorTela.getDisciplinas()){
            procuraProfessor.addHorario(disciplina, professorTela);
        }
        procuraProfessor.criaListaAvaliacoes(professorTela);
        txtNomeProfessor.setText(professorTela.getNome());
        txtEmail.setText(professorTela.getEmail());
        txtDepartamentoProfessor.setText(professorTela.getDepartamento());
        carregarListaDisciplinas();     
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlProfessores = new javax.swing.JPanel();
        lblProfessores = new javax.swing.JLabel();
        pnlInformacoes = new javax.swing.JPanel();
        lblNomeProfessor = new javax.swing.JLabel();
        txtNomeProfessor = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblDepartamento = new javax.swing.JLabel();
        txtDepartamentoProfessor = new javax.swing.JTextField();
        lblDisciplinas = new javax.swing.JLabel();
        scrlpnlListaDisciplinasHorarios = new javax.swing.JScrollPane();
        listaDisciplinasHorarios = new javax.swing.JList<>();
        btnOkProfessor = new javax.swing.JButton();
        btnExcluirDisciplinaProfessor = new javax.swing.JButton();
        btnEditarHorarioProfessor = new javax.swing.JButton();
        txtEditarHorario = new javax.swing.JTextField();
        btnOkEditarHorario = new javax.swing.JButton();
        lblDisciplinaHorario = new javax.swing.JLabel();
        txtDisciplinaHorario = new javax.swing.JTextField();
        pnlBtnsProfessor = new javax.swing.JPanel();
        btnPesquisarProfessor = new javax.swing.JButton();
        btnExcluirProfessor = new javax.swing.JButton();
        btnCancelarProfessor = new javax.swing.JButton();
        btnNovoProfessor = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnEditarProfessor = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        pnlDisciplinas = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblNomeDisciplina = new javax.swing.JLabel();
        txtNomeDisciplina = new javax.swing.JTextField();
        lblDepartamentoDisciplina = new javax.swing.JLabel();
        txtDepartamentoDisciplina = new javax.swing.JTextField();
        lblCargaHoraria = new javax.swing.JLabel();
        txtCargaHoraria = new javax.swing.JTextField();
        lblCodigoDisciplina = new javax.swing.JLabel();
        txtCodigoDisciplina = new javax.swing.JTextField();
        lblListaProfessores = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaProfessores = new javax.swing.JList<>();
        pnlBtnsDisciplina = new javax.swing.JPanel();
        btnNovaDisciplina = new javax.swing.JButton();
        btnSalvarDisciplina = new javax.swing.JButton();
        btnPesquisarDisciplina = new javax.swing.JButton();
        btnExcluirDisciplina = new javax.swing.JButton();
        btnEditarDisciplina = new javax.swing.JButton();
        btnCancelarDisciplina = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrador");

        lblProfessores.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        lblProfessores.setText("Professores");

        lblNomeProfessor.setText("Nome:");

        lblEmail.setText("E-mail:");

        lblDepartamento.setText("Departamento:");

        lblDisciplinas.setText("Lista de disciplinas/horários:");

        listaDisciplinasHorarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaDisciplinasHorariosMouseClicked(evt);
            }
        });
        scrlpnlListaDisciplinasHorarios.setViewportView(listaDisciplinasHorarios);

        btnOkProfessor.setText("OK");
        btnOkProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkProfessorActionPerformed(evt);
            }
        });

        btnExcluirDisciplinaProfessor.setText("Excluir disciplina");
        btnExcluirDisciplinaProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirDisciplinaProfessorActionPerformed(evt);
            }
        });

        btnEditarHorarioProfessor.setText("Editar horário");
        btnEditarHorarioProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarHorarioProfessorActionPerformed(evt);
            }
        });

        txtEditarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditarHorarioActionPerformed(evt);
            }
        });

        btnOkEditarHorario.setText("OK");
        btnOkEditarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkEditarHorarioActionPerformed(evt);
            }
        });

        lblDisciplinaHorario.setText("Definir disciplinas/horários:");

        txtDisciplinaHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDisciplinaHorarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInformacoesLayout = new javax.swing.GroupLayout(pnlInformacoes);
        pnlInformacoes.setLayout(pnlInformacoesLayout);
        pnlInformacoesLayout.setHorizontalGroup(
            pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformacoesLayout.createSequentialGroup()
                        .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                                .addComponent(lblNomeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNomeProfessor))
                            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                                .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmail))
                            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                                .addComponent(lblDepartamento)
                                .addGap(18, 18, 18)
                                .addComponent(txtDepartamentoProfessor)))
                        .addGap(18, 18, 18)
                        .addComponent(btnOkProfessor)
                        .addGap(138, 138, 138))
                    .addGroup(pnlInformacoesLayout.createSequentialGroup()
                        .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDisciplinas)
                            .addComponent(lblDisciplinaHorario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrlpnlListaDisciplinasHorarios, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(txtDisciplinaHorario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnExcluirDisciplinaProfessor)
                            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                                .addComponent(btnEditarHorarioProfessor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnOkEditarHorario)
                                    .addComponent(txtEditarHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlInformacoesLayout.setVerticalGroup(
            pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeProfessor)
                    .addComponent(txtNomeProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOkProfessor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail))
                .addGap(18, 18, 18)
                .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDepartamento)
                    .addComponent(txtDepartamentoProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformacoesLayout.createSequentialGroup()
                        .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrlpnlListaDisciplinasHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(btnExcluirDisciplinaProfessor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEditarHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEditarHorarioProfessor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOkEditarHorario)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDisciplinaHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDisciplinaHorario))
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(pnlInformacoesLayout.createSequentialGroup()
                        .addComponent(lblDisciplinas)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        btnPesquisarProfessor.setText("Pesquisar");
        btnPesquisarProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarProfessorActionPerformed(evt);
            }
        });

        btnExcluirProfessor.setText("Excluir");
        btnExcluirProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProfessorActionPerformed(evt);
            }
        });

        btnCancelarProfessor.setText("Cancelar");
        btnCancelarProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarProfessorActionPerformed(evt);
            }
        });

        btnNovoProfessor.setText("Novo");
        btnNovoProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoProfessorActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEditarProfessor.setText("Editar");
        btnEditarProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProfessorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBtnsProfessorLayout = new javax.swing.GroupLayout(pnlBtnsProfessor);
        pnlBtnsProfessor.setLayout(pnlBtnsProfessorLayout);
        pnlBtnsProfessorLayout.setHorizontalGroup(
            pnlBtnsProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBtnsProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPesquisarProfessor)
                .addGap(18, 18, 18)
                .addComponent(btnExcluirProfessor)
                .addGap(18, 18, 18)
                .addComponent(btnCancelarProfessor)
                .addGap(18, 18, 18)
                .addComponent(btnNovoProfessor)
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addGap(18, 18, 18)
                .addComponent(btnEditarProfessor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBtnsProfessorLayout.setVerticalGroup(
            pnlBtnsProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBtnsProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBtnsProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisarProfessor)
                    .addComponent(btnExcluirProfessor)
                    .addComponent(btnCancelarProfessor)
                    .addComponent(btnNovoProfessor)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditarProfessor))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlProfessoresLayout = new javax.swing.GroupLayout(pnlProfessores);
        pnlProfessores.setLayout(pnlProfessoresLayout);
        pnlProfessoresLayout.setHorizontalGroup(
            pnlProfessoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBtnsProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlProfessoresLayout.createSequentialGroup()
                .addGroup(pnlProfessoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProfessoresLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlInformacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlProfessoresLayout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(lblProfessores)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlProfessoresLayout.setVerticalGroup(
            pnlProfessoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProfessoresLayout.createSequentialGroup()
                .addComponent(lblProfessores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInformacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlBtnsProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        jLabel1.setText("Disciplinas");

        lblNomeDisciplina.setText("Nome:");

        lblDepartamentoDisciplina.setText("Departamento:");

        lblCargaHoraria.setText("Carga Horária:");

        lblCodigoDisciplina.setText("Código:");

        lblListaProfessores.setText("Lista de professores:");

        jScrollPane1.setViewportView(listaProfessores);

        btnNovaDisciplina.setText("Novo");

        btnSalvarDisciplina.setText("Salvar");

        btnPesquisarDisciplina.setText("Pesquisar");

        btnExcluirDisciplina.setText("Excluir");

        btnEditarDisciplina.setText("Editar");
        btnEditarDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarDisciplinaActionPerformed(evt);
            }
        });

        btnCancelarDisciplina.setText("Cancelar");

        javax.swing.GroupLayout pnlBtnsDisciplinaLayout = new javax.swing.GroupLayout(pnlBtnsDisciplina);
        pnlBtnsDisciplina.setLayout(pnlBtnsDisciplinaLayout);
        pnlBtnsDisciplinaLayout.setHorizontalGroup(
            pnlBtnsDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBtnsDisciplinaLayout.createSequentialGroup()
                .addComponent(btnNovaDisciplina)
                .addGap(18, 18, 18)
                .addComponent(btnEditarDisciplina)
                .addGap(18, 18, 18)
                .addComponent(btnSalvarDisciplina)
                .addGap(18, 18, 18)
                .addComponent(btnPesquisarDisciplina)
                .addGap(18, 18, 18)
                .addComponent(btnExcluirDisciplina)
                .addGap(18, 18, 18)
                .addComponent(btnCancelarDisciplina)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        pnlBtnsDisciplinaLayout.setVerticalGroup(
            pnlBtnsDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBtnsDisciplinaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBtnsDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovaDisciplina)
                    .addComponent(btnSalvarDisciplina)
                    .addComponent(btnPesquisarDisciplina)
                    .addComponent(btnExcluirDisciplina)
                    .addComponent(btnEditarDisciplina)
                    .addComponent(btnCancelarDisciplina))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBtnsDisciplina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblNomeDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(txtNomeDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblCodigoDisciplina)
                                .addGap(18, 18, 18)
                                .addComponent(txtCodigoDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDepartamentoDisciplina)
                                    .addComponent(lblCargaHoraria))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDepartamentoDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblListaProfessores)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeDisciplina)
                    .addComponent(txtNomeDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoDisciplina)
                    .addComponent(txtCodigoDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartamentoDisciplina)
                    .addComponent(txtDepartamentoDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCargaHoraria)
                    .addComponent(txtCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblListaProfessores)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pnlBtnsDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDisciplinasLayout = new javax.swing.GroupLayout(pnlDisciplinas);
        pnlDisciplinas.setLayout(pnlDisciplinasLayout);
        pnlDisciplinasLayout.setHorizontalGroup(
            pnlDisciplinasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisciplinasLayout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlDisciplinasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDisciplinasLayout.setVerticalGroup(
            pnlDisciplinasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDisciplinasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlProfessores, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlDisciplinas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlProfessores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDisciplinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarProfessorActionPerformed
        limparProfessor();
        btnNovoProfessor.setEnabled(false);
        btnOkProfessor.setEnabled(true);
        txtNomeProfessor.setEnabled(true);    
        btnCancelarProfessor.setEnabled(true);
        txtNomeProfessor.requestFocus();// TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisarProfessorActionPerformed

    private void btnOkProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkProfessorActionPerformed
        String nomeProfessor = txtNomeProfessor.getText();
        VerificaNome verificadorNome= new VerificaNome();
        if (nomeProfessor.equals("") || !verificadorNome.verifica(nomeProfessor)){
         JOptionPane.showMessageDialog(null, "Digite uma entrada válida para a pesquisa");
        }
        else {
            Professor prof =null;
            List <Professor> listaProfessores = procuraProfessor.read();
            for (Professor professor : listaProfessores){
                if (professor.getNome().toLowerCase().equals(nomeProfessor.toLowerCase())){
                    prof = professor;
                }
                
            }
            if (prof == null){
                JOptionPane.showMessageDialog(null, "Professor não encontrado");
            }
            else {
                professorTela= prof;
                carregarInformacoesProfessor();
                btnEditarProfessor.setEnabled(true);
                txtNomeProfessor.setEnabled(false);
                btnExcluirProfessor.setEnabled(true);
                btnNovoProfessor.setEnabled(true);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnOkProfessorActionPerformed

    private void listaDisciplinasHorariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaDisciplinasHorariosMouseClicked
        int indice = listaDisciplinasHorarios.getSelectedIndex();
        if (indice >=0 && indice <=listaDisciplinasHorarios.getMaxSelectionIndex()){
            btnExcluirDisciplinaProfessor.setEnabled(true);
            btnEditarHorarioProfessor.setEnabled(true);
            btnOkEditarHorario.setEnabled(true);
        }// TODO add your handling code here:
    }//GEN-LAST:event_listaDisciplinasHorariosMouseClicked

    private void txtDisciplinaHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDisciplinaHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDisciplinaHorarioActionPerformed

    private void btnEditarProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProfessorActionPerformed
        txtNomeProfessor.setEnabled(true);
        txtDepartamentoProfessor.setEnabled(true);
        txtEmail.setEnabled(true);
        listaDisciplinasHorarios.setEnabled(true);
        btnSalvar.setEnabled(true);
        btnNovoProfessor.setEnabled(false);
        btnCancelarProfessor.setEnabled(true);
        btnPesquisarProfessor.setEnabled(false);
        editarProfessor = true;
        novoProfessor = false;
        txtDisciplinaHorario.setEnabled(true);
                // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarProfessorActionPerformed

    private void btnNovoProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoProfessorActionPerformed
        limparProfessor();
        btnNovoProfessor.setEnabled(false);
        btnCancelarProfessor.setEnabled(true);
        btnSalvar.setEnabled(true); 
        btnPesquisarProfessor.setEnabled(false);
        novoProfessor = true;
        editarProfessor = false;
        txtNomeProfessor.setEnabled(true);
        txtEmail.setEnabled(true);
        txtDepartamentoProfessor.setEnabled(true);
        txtDisciplinaHorario.setEnabled(true);
        listaDisciplinasHorarios.setEnabled(false);// TODO add your handling code here:
    }//GEN-LAST:event_btnNovoProfessorActionPerformed

    private void btnCancelarProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarProfessorActionPerformed
        limparProfessor();   // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarProfessorActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        Horario verificadorHorario = new Horario();
        VerificaCodigo verificadorCodigo = new VerificaCodigo();
        String nome = txtNomeProfessor.getText();
        String email = txtEmail.getText();
        String departamento = txtDepartamentoProfessor.getText();
        String horarios = txtDisciplinaHorario.getText();
        String [] horariosSeparados = horarios.split(";");
        ArrayList<String> nomeDisciplinas = new ArrayList<>();
        boolean existeDisciplina =false;
        boolean horarioValido = false;
        boolean codigoValido = false;
        ArrayList<Disciplina> disciplinas = new ArrayList<>();
        DisciplinaDAO procuraDisciplina = new DisciplinaDAO();
        ProfessorDAO procuraProfessor = new ProfessorDAO();
        if (!horarios.equals("")){
            for (String horariosLoop : horariosSeparados){
                String [] disciplinaHorario = horariosLoop.split(":");
                for (Disciplina disc : procuraDisciplina.read()){
                    //JOptionPane.showMessageDialog(null, disciplinaHorario[0]);
                    if (disc.getCodigo().equals(disciplinaHorario[0])){
                        existeDisciplina=true;
                        nomeDisciplinas.add(disc.getCodigo());
                        disciplinas.add(disc);
                        break;
                    }
                }
                codigoValido = verificadorCodigo.verifica(disciplinaHorario[0]);
                horarioValido = verificadorHorario.verifica(disciplinaHorario[1]);
            }
        }
        String listaDisciplinas = String.join(",", nomeDisciplinas);
        VerificaEmail verificadorEmail = new VerificaEmail();
        VerificaNome verificadorNome = new VerificaNome();
            
        boolean valido = verificadorEmail.verifica(email) && verificadorNome.verifica(nome) && horarioValido && codigoValido;
        if (nome.equals("") || email.equals("") || departamento.equals("") || horarios.equals("") || !valido || !existeDisciplina){
            JOptionPane.showMessageDialog(null, nome.equals(""));
            JOptionPane.showMessageDialog(null, email.equals("")+ " email");
            JOptionPane.showMessageDialog(null, departamento.equals("") + " departamento" );
            JOptionPane.showMessageDialog(null, horarios.equals("") + " horarios");
            JOptionPane.showMessageDialog(null, !valido + " validacao");
            JOptionPane.showMessageDialog(null, !existeDisciplina + " disciplina");

            JOptionPane.showMessageDialog(null, "Digite entradas válidas");
        }
        else {
            if (novoProfessor){
                Professor novoProf = new Professor (nome, departamento, email);
                adm.createProfessor(novoProf, listaDisciplinas, horarios);
                Professor acharId = procuraProfessor.achaProfessor(novoProf.getNome());
                int id = acharId.getId();
                novoProf.setId(id);
                procuraProfessor.criaListaDisciplinas(novoProf);
                for (Disciplina disc : novoProf.getDisciplinas()){
                    adm.addProfessor(novoProf.getNome(), disc);
                }
                limparProfessor();
                
            }
            else if (editarProfessor){
                Professor editProfessor = new Professor (nome,departamento,email);
                DisciplinaDAO achaDisciplina = new DisciplinaDAO();
                ArrayList<String> listaDisciplinasTela = new ArrayList<>();
                Map <Disciplina,String> novoHorario = new HashMap<>();
                for (Disciplina disc : professorTela.getDisciplinas()){
                    listaDisciplinasTela.add(disc.getNome());
                    editProfessor.addDisciplina(achaDisciplina.achaDisciplina(disc.getCodigo()));
                    novoHorario.put(disc, professorTela.getHorario(disc));                   
                }
                for (Disciplina disc : novoHorario.keySet()){
                    JOptionPane.showMessageDialog(null, disc.getCodigo() + ":"+novoHorario.get(disc));
                }
                boolean jaAdicionado = false;
                for (String horariosLoop : horariosSeparados){
                    String [] disciplinaHorario = horariosLoop.split(":");
                    if (listaDisciplinasTela.contains(disciplinaHorario[0])){
                        jaAdicionado = true;
                     }
                    else{
                        editProfessor.addDisciplina(procuraDisciplina.achaDisciplina(disciplinaHorario[0]));
                        novoHorario.put(achaDisciplina.achaDisciplina(disciplinaHorario[0]), disciplinaHorario[1]);
                        //editProfessor.setHorariosDisciplinas(disciplinaHorario[1],achaDisciplina.achaDisciplina(disciplinaHorario[0]));
                     }
                    
                     
                }
                editProfessor.setId(professorTela.getId());
                for (Disciplina disc : editProfessor.getDisciplinas()){
                    JOptionPane.showMessageDialog(null, disc.getCodigo() + ":" + editProfessor.getListaHorarios().get(disc));
                }
                if (jaAdicionado){
                    JOptionPane.showMessageDialog(null, "Digite disciplinas/horários válidos");
                }
                else{
                    adm.editarProfessor(editProfessor);
                    limparProfessor();
                }
                
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProfessorActionPerformed
        AvaliacaoDAO procuraAvaliacao= new AvaliacaoDAO();
        List<Avaliacao> listaAvaliacoes = procuraAvaliacao.read();
        for (Avaliacao avalia : listaAvaliacoes){
            if (avalia.getProfessor().getId() == professorTela.getId()){
                adm.deleteAvaliacao(avalia);
            }
        }
        for (Disciplina disc : professorTela.getDisciplinas()){
            adm.tiraProfessorLista(disc.getCodigo(), professorTela.getNome());
        }
        adm.deleteProfessor(professorTela);
        limparProfessor();        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirProfessorActionPerformed

    private void btnExcluirDisciplinaProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirDisciplinaProfessorActionPerformed
        int indice = listaDisciplinasHorarios.getSelectedIndex();
        if (indice >=0 && indice <=listaDisciplinasHorarios.getMaxSelectionIndex() && listaDisciplinasHorarios.getModel().getSize()-1>0){
            Disciplina disciplinaExcluir = professorTela.getDisciplinas().get(indice);
            adm.tiraDisciplinaLista(professorTela, disciplinaExcluir.getCodigo());
            adm.tiraProfessorLista(disciplinaExcluir.getCodigo(), professorTela.getNome());
            professorTela.limpaHorarios();
            professorTela.limpaDisciplinas();
            carregarInformacoesProfessor();
            listaDisciplinasHorarios.clearSelection();
            btnExcluirDisciplinaProfessor.setEnabled(false);
            btnOkEditarHorario.setEnabled(false);
        }
        else if (listaDisciplinasHorarios.getModel().getSize()-1==0){
            JOptionPane.showMessageDialog(null, "O professor deve ter ao menos uma disciplina cadastrada");
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirDisciplinaProfessorActionPerformed

    private void txtEditarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditarHorarioActionPerformed

              // TODO add your handling code here:
    }//GEN-LAST:event_txtEditarHorarioActionPerformed

    private void btnEditarHorarioProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarHorarioProfessorActionPerformed
        int indice = listaDisciplinasHorarios.getSelectedIndex();
        if (indice >=0 && indice <=listaDisciplinasHorarios.getMaxSelectionIndex()){
            txtEditarHorario.setEnabled(true);
            btnOkEditarHorario.setEnabled(true);
            txtEditarHorario.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnEditarHorarioProfessorActionPerformed

    private void btnOkEditarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkEditarHorarioActionPerformed
        int indice = listaDisciplinasHorarios.getSelectedIndex();
        if (indice >=0 && indice <=listaDisciplinasHorarios.getMaxSelectionIndex()){
            String novoHorario = txtEditarHorario.getText();
            String[] disciplinaHorario = listaDisciplinasHorarios.getSelectedValue().split(":");
            String disciplina = disciplinaHorario[0];
            Horario verificadorHorario = new Horario();
            try{
                if (verificadorHorario.verifica(novoHorario)){
                    adm.editarHorarioProfessor(professorTela, disciplina, novoHorario);
                    professorTela.limpaHorarios();
                    professorTela.limpaDisciplinas();
                    carregarInformacoesProfessor();
                }
                else {
                    JOptionPane.showMessageDialog(null, "Insira um horario válido");
                }
            }
            catch (IllegalArgumentException e){
                JOptionPane.showMessageDialog(null, "Insira um horario válido");
            }
            
        }

    // TODO add your handling code here:
    }//GEN-LAST:event_btnOkEditarHorarioActionPerformed

    private void btnEditarDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarDisciplinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarDisciplinaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAdministrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarDisciplina;
    private javax.swing.JButton btnCancelarProfessor;
    private javax.swing.JButton btnEditarDisciplina;
    private javax.swing.JButton btnEditarHorarioProfessor;
    private javax.swing.JButton btnEditarProfessor;
    private javax.swing.JButton btnExcluirDisciplina;
    private javax.swing.JButton btnExcluirDisciplinaProfessor;
    private javax.swing.JButton btnExcluirProfessor;
    private javax.swing.JButton btnNovaDisciplina;
    private javax.swing.JButton btnNovoProfessor;
    private javax.swing.JButton btnOkEditarHorario;
    private javax.swing.JButton btnOkProfessor;
    private javax.swing.JButton btnPesquisarDisciplina;
    private javax.swing.JButton btnPesquisarProfessor;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvarDisciplina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCargaHoraria;
    private javax.swing.JLabel lblCodigoDisciplina;
    private javax.swing.JLabel lblDepartamento;
    private javax.swing.JLabel lblDepartamentoDisciplina;
    private javax.swing.JLabel lblDisciplinaHorario;
    private javax.swing.JLabel lblDisciplinas;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblListaProfessores;
    private javax.swing.JLabel lblNomeDisciplina;
    private javax.swing.JLabel lblNomeProfessor;
    private javax.swing.JLabel lblProfessores;
    private javax.swing.JList<String> listaDisciplinasHorarios;
    private javax.swing.JList<String> listaProfessores;
    private javax.swing.JPanel pnlBtnsDisciplina;
    private javax.swing.JPanel pnlBtnsProfessor;
    private javax.swing.JPanel pnlDisciplinas;
    private javax.swing.JPanel pnlInformacoes;
    private javax.swing.JPanel pnlProfessores;
    private javax.swing.JScrollPane scrlpnlListaDisciplinasHorarios;
    private javax.swing.JTextField txtCargaHoraria;
    private javax.swing.JTextField txtCodigoDisciplina;
    private javax.swing.JTextField txtDepartamentoDisciplina;
    private javax.swing.JTextField txtDepartamentoProfessor;
    private javax.swing.JTextField txtDisciplinaHorario;
    private javax.swing.JTextField txtEditarHorario;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNomeDisciplina;
    private javax.swing.JTextField txtNomeProfessor;
    // End of variables declaration//GEN-END:variables
}
