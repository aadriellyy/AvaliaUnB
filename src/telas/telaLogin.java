/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import Connection.ConnectionFactory;
import classes.Aluno;
import java.sql.*;
import javax.swing.JOptionPane;
import model.dao.AlunoDAO;
import java.util.logging.Level;
import java.util.logging.Logger;

public class telaLogin extends javax.swing.JFrame {
    
    /**
     * Creates new form telaLogin
     */
    
    private Aluno aluno;
    private static String matriculaLogada;
    private String senhaAdm= "abc123";
    public telaLogin() {
        initComponents();
        this.txtSenha.setText("");
        this.txtSenhaAdm.setEnabled(false);
        this.btnLoginAdm.setEnabled(false);
        btnCancelar.setEnabled(false);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMatricula = new javax.swing.JLabel();
        lblSenha = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnEntrar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        btnAdministrador = new javax.swing.JButton();
        txtSenhaAdm = new javax.swing.JPasswordField();
        btnLoginAdm = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login/cadastro");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone login.png")).getImage());
        setResizable(false);

        lblMatricula.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        lblMatricula.setText("Matr√≠cula:");

        lblSenha.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        lblSenha.setText("Senha:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 29, Short.MAX_VALUE)
        );

        btnEntrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img-aluno/voltar.png"))); // NOI18N
        btnEntrar.setText("Entrar");
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });

        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img-aluno/novo.png"))); // NOI18N
        btnCadastrar.setText("Cadastre-se");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imagens-login/avaliacao.png"))); // NOI18N

        txtSenha.setText("jPasswordField1");

        btnAdministrador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_adm_tela.png"))); // NOI18N
        btnAdministrador.setText("Administrador");
        btnAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdministradorActionPerformed(evt);
            }
        });

        btnLoginAdm.setText("Login");
        btnLoginAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginAdmActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMatricula)
                    .addComponent(lblSenha))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(233, 233, 233))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCadastrar)
                .addGap(18, 18, 18)
                .addComponent(btnEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177))
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdministrador)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnLoginAdm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar))
                    .addComponent(txtSenhaAdm, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(146, 146, 146))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMatricula)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenha)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadastrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSenhaAdm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar)
                            .addComponent(btnLoginAdm))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public static boolean matricula(String matriculaAtual){
        if(matriculaAtual.equals(matriculaLogada)){
            return true;
        }
        else{
            return false;
        }
    }
    
    public static Aluno autenticar(String matricula, String senha){
        AlunoDAO dao = new AlunoDAO();
        for(Aluno aluno: dao.read()){
            if(aluno.getSenha().equals(senha) && aluno.getMatricula().equals(matricula)){
                return aluno;
            }
        }  
        return null;
    }
    
    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        new telaCadastro().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
       String matricula = txtMatricula.getText();
       String senha = txtSenha.getText();
       
       if(matricula.equals("") || senha.equals("")){
           JOptionPane.showMessageDialog(null, "Todos os campos devem ser inseridos", "erro", JOptionPane.INFORMATION_MESSAGE );
       }
       else{
        Aluno aluno = autenticar(matricula, senha);
        if(aluno != null){
            this.setVisible(false);
            //new TelaAvaliacao(matricula).setVisible(true);
            new TelaAluno(aluno).setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "Usu√°rio n√£o encontrado!", "erro", JOptionPane.INFORMATION_MESSAGE );
        }
       }
       
       this.txtMatricula.setText("");
       this.txtSenha.setText("");
    }//GEN-LAST:event_btnEntrarActionPerformed

    private void btnAdministradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdministradorActionPerformed
        txtSenhaAdm.setEnabled(true);
        btnLoginAdm.setEnabled(true);
        btnAdministrador.setEnabled(false);
        txtMatricula.setEnabled(false);
        txtSenha.setEnabled(false);
        txtMatricula.setText("");
        txtSenha.setText("");
        btnEntrar.setEnabled(false);
        btnCadastrar.setEnabled(false);
        btnCancelar.setEnabled(true);
// TODO add your handling code here:
    }//GEN-LAST:event_btnAdministradorActionPerformed

    private void btnLoginAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginAdmActionPerformed
        String entrada = txtSenhaAdm.getText();
        if (entrada.equals(senhaAdm)){
            new TelaAdministrador().setVisible(true);
            this.setVisible(false);           
        }
        else{
            JOptionPane.showMessageDialog(null, "Senha incorreta");
            txtSenhaAdm.setText("");
            txtSenhaAdm.setEnabled(false);
            btnLoginAdm.setEnabled(false);
            txtMatricula.setEnabled(true);
            txtSenha.setEnabled(true);
            btnEntrar.setEnabled(true);
            btnCadastrar.setEnabled(true);
            btnCancelar.setEnabled(false);
            btnAdministrador.setEnabled(true);
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnLoginAdmActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
            txtSenhaAdm.setText("");
            txtSenhaAdm.setEnabled(false);
            btnLoginAdm.setEnabled(false);
            txtMatricula.setEnabled(true);
            txtSenha.setEnabled(true);
            btnEntrar.setEnabled(true);
            btnCadastrar.setEnabled(true);
            btnCancelar.setEnabled(false);
            btnAdministrador.setEnabled(true);// TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaLogin().setVisible(true);
            }
        });
        
        Connection con = null;
        Statement stmt = null;
            try {
                con = ConnectionFactory.getInitialConnection();
                stmt = con.createStatement();
                
                // Primeiro, criar o banco de dados, se necess√°rio
                String createDatabaseSQL = "CREATE DATABASE IF NOT EXISTS avaliaunb;";
                stmt.executeUpdate(createDatabaseSQL);
                
                 // Fechar a conex√£o inicial
                stmt.close();
                ConnectionFactory.closeConnection(con);

                // Conectar ao banco de dados rec√©m-criado
                con = ConnectionFactory.getDatabaseConnection();
                stmt = con.createStatement();

                // Em seguida, selecionar o banco de dados
                String useDatabaseSQL = "USE avaliaunb;";
                stmt.executeUpdate(useDatabaseSQL);

                // Cria√ß√£o da tabela aluno
                String createAlunoTableSQL = """
                    CREATE TABLE IF NOT EXISTS aluno (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        nome VARCHAR(100),
                        email VARCHAR(100),
                        senha VARCHAR(100),
                        curso VARCHAR(100),
                        departamento VARCHAR(100),
                        matricula VARCHAR(50) UNIQUE KEY,
                        avaliacoesCurtidas VARCHAR(150)
                    );
                """;
                stmt.executeUpdate(createAlunoTableSQL);

                // Cria√ß√£o da tabela professor
                String createProfessoresTableSQL = """
                    CREATE TABLE IF NOT EXISTS professores (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        nome VARCHAR(100),
                        email VARCHAR(100),
                        departamento VARCHAR(100),
                        listaDisciplinas VARCHAR(150),
                        listaAvaliacoes VARCHAR(150),
                        listaHorarios VARCHAR(400)
                    );
                """;
                stmt.executeUpdate(createProfessoresTableSQL);

                // Cria√ß√£o da tabela avaliacao
                String createAvaliacaoTableSQL = """
                    CREATE TABLE IF NOT EXISTS avaliacao (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        feedback TEXT,
                        nota INT,
                        professorID INT,
                        likes INT,
                        alunoID INT,
                        FOREIGN KEY (professorID) REFERENCES professores(id),
                        FOREIGN KEY (alunoID) REFERENCES aluno(id)
                    );
                """;
                stmt.executeUpdate(createAvaliacaoTableSQL);

                // Cria√ß√£o da tabela disciplina
                String createDisciplinaTableSQL = """
                    CREATE TABLE IF NOT EXISTS disciplinas (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        nome VARCHAR(100),
                        codigo VARCHAR(15), 
                        departamento VARCHAR (45),
                        horas INT,
                        listaProfessores VARCHAR (500)                  
                    );
                """;
                stmt.executeUpdate(createDisciplinaTableSQL);
                
                //cria a tabela de grade
                String createGradeTableSQL= """
                 CREATE TABLE IF NOT EXISTS grade (
                 horarios VARCHAR(400),
                 horas INT,
                 alunoID INT, 
                 FOREIGN KEY (alunoID) REFERENCES aluno(id)
                 );                                                     
                 """;
                stmt.executeUpdate(createGradeTableSQL);
                
                //cria a tabela de coment√°rio
                String createComentarioTableSQL= """
                CREATE TABLE IF NOT EXISTS comentario(
                                            id int auto_increment,
                                            texto text, 
                                            dateCreated date,
                                            avaliacaoid int,
                                            primary key(id),
                                            foreign key (avaliacaoid) references avaliacao(id)                                            
                                            );                           
                                                 """;
                stmt.executeUpdate(createComentarioTableSQL);
                
            }
            catch(SQLException ex){
                Logger.getLogger(AlunoDAO.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Erro ao autalizar!" + ex);
            }finally{
                if (stmt != null) {
                    try {
                        stmt.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(AlunoDAO.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                ConnectionFactory.closeConnection(con);
            }  
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdministrador;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEntrar;
    private javax.swing.JButton btnLoginAdm;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JPasswordField txtSenhaAdm;
    // End of variables declaration//GEN-END:variables
}
